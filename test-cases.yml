---
- summary: |
    Кнопка "Регистрация" пользователя
  requirement: |
    Пользователь должен иметь возможность зарегистрироваться на сайте магазина
  prerequisites:
    Открыта страница магазина со списком товаров
  test-data: |
    Логин = Логин = hexlet Пароль = badpass
    Телефон = 79539456733 Почта = bad@mail.ru
  steps:
    - Визуально просматриваем страницу магазина на наличие кнопки "Регистрация" # баг у пользователя нет возможности зарегистрироваться так как отсутствует кнопка "Регистрация" и соответственно форма регистрации 
  expected-result: |
    Пользователь зарегистрирован на сайте магазина 

---
- summary: |
    Смена языка 
  requirement: |
    Пользователь может сменить язык магазина 
  prerequisites: |
    Открыта страница магазина со списком товаров
    На странице есть кнопка "Язык"
  test-data: |
    Язык = Русский # выбрать любой имеющийся язык 
  steps:
    - Находим кнопку "Язык"
    - Выбираем из предложенных русский язык
    - Визуально просматриваем русифицированную страницу магазина
  expected-result: |
    Пользователь имеет возможность сменить язык на более удобный

---
- summary: |
    Фильтрация товаров по названию 
  requirement: |
    При вводе категории пользователю виден весь список товаров выбранной категории
  prerequisites: |
    Открыта страница магазина со списком товаров
    На странице есть раздел поиска 
  test-data: |
    Товар = iPhone X # выбрать любой товар на странице магазина 
  steps:
    - Вводим в поиск товар iPhone X
    - Визуально просматриваем страницу с отфильтрованным товаром 
  expected-result: |
    Пользователю виден отфильтрованный товар по названию 

---
- summary: |
    Фильтрация товаров по категории
  requirement: |
    При вводе категории пользователю виден весь список товаров выбранной категории
  prerequisites: |
    Открыта страница магазина со списком товаров
    На странице есть раздел с категориями товаров
  test-data: |
    Выбрать Категрию = Ноутбуки # по возможности проверить все имеющиеся категории магазина
  steps:
    - Вводим категорию "Ноутбуки"
    - Визуально просматриваем товары на соответствие выбранной категории "Ноутбуки"
  expected-result: |
    Пользователю виден весь список товаров выбранной категории "Ноутбуки"

---
- summary: |
    Фильтрация товаров по наличию
  requirement: |
    При включенной отметке "В наличии" пользователю виден весь список товаров в наличии 
  prerequisites: |
    Открыта страница магазина со списком товаров
    На странице есть раздел с кнопкой "В наличии"
  test-data: |
    В наличии
  steps:
    - Раздел "В наличии"
    - Ставим галочку "В наличии"
  expected-result: |
    Пользователю видны товары находящиеся в наличии в магазине на данный момент 

---
- summary: |
    Фильтрация товаров по цене
  requirement: |
    Пользователь может задать ценовой диапазон  
  prerequisites: |
    Открыта страница магазина со списком товаров
    На странице есть раздел "Цена"
  test-data: |
   Цена от 5000 до 10000 # выбрать любой ценовой диапазон, пограничный
  steps:
    - Раздел "Цена"
    - Вводим от 5000
    - Вводим до 10000
    - Визуально просматриваем отфильтрованные товары ценового диапазона от 5000 до 10000
  expected-result: |
    Пользователю видны товары находящиеся в заданном ценовом диапазоне

---
- summary: |
    Фильтрация товаров по производителю
  requirement: |
    При выборе производителя пользователю видны все товары данного производителя
  prerequisites: |
    Открыта страница магазина со списком товаров
    На странице есть раздел "Производитель"
  test-data: |
    Производитель Impression of Acqua Di Gio # выбрать любого производителя
  steps:
    - В разделе "Производитель" находим в списке производителя Impression of Acqua Di Gio
    - Ставим галочку напротив производителя Impression of Acqua Di Gio
    - Проверяем визуально отфильтрованный список товаров от производителя = Impression of Acqua Di Gio
  expected-result: |
    Пользователь должен попасть на страницу товаров отфильтрованную по производителю Impression of Acqua Di Gio

---
- summary: |
    Фильтрация товаров по производителю наличию цене
  requirement: |
    При выборе фильтров "Производитель" "В наличие" "Цена" пользователю видны все отфильтрованные товары
  prerequisites: |
    Открыта страница магазина со списком товаров
    На странице есть раздел со списком "Производитель"
    На странице есть раздел "Цена"
    На странице есть раздел с кнопкой "В наличии"
  test-data: |
    Производитель Apple # выбрать любого производителя
    Цена от 5000 до 1000 # выбрать любой ценовой диапазон
    Товар = iPhone X # выбрать любой товар на странице магазина
  steps:
    - Находим в списке производителя Apple
    - Ставим галочку напротив производителя Apple
    - В разделе цена вводим следующий ценовой диапазон от 5000 до 1000
    - В разделе "В наличии" ставим галочку "В наличии"
    - Визуально просматриваем отфильтрованный список товаров 
    - Находим товар iPhone X
  expected-result: |
    Пользователь должен попасть на страницу товаров отфильтрованную по производителю цене и наличию и найти необходимый товар в списке

---
- summary: |
    Просмотр товаров магазина
  requirement: |
   Пользователь должен иметь возможность просматривать товары магазина
  prerequisites: |
    Открыта страница магазина со списком товаров
  test-data: |
    Товар = iPhone X # выбрать любой товар на странице магазина 
    Товар = Women Shoes
  steps:
    - Находим товар iPhone X
    - Визуально просматриваем iPhone X
    - Прокручиваем страницу с товарами до конца
    - Нажимаем кнопку "Следующую страницу"
    - Находим товар Women Shoes
    - Визуально просматриваем Women Shoes
  expected-result: |
    Пользователь должен иметь возможность просматривать товары 

---
- summary: |
    Просмотр описания страницы товара 
  requirement: |
   Пользователь должен иметь возможность просматривать подробную информацию о товаре название описание цена скидка уникальный идентификатор рейтинг
  prerequisites: |
    Открыта страница магазина со списком товаров
  test-data: |
    Товар = iPhone X # выбрать любой товар на странице магазина 
  steps:
    - Находим товар iPhone X
    - Заходим на страницу товара iPhone X
    - Визуально проверяем название товара iPhone X
    - Проверяем наличие цены товара iPhone X
    - Проверяем наличие скидки на товара iPhone X
    - Проверяем описание товара iPhone X
    - Проверяем уникальный идентификатор товара iPhone X
    - Проверяем рейтинг товара iPhone X
  expected-result: |
    Пользователь должен попасть на страницу товара с его подробной информацией название цена описание уникальный идентификатор рейтинг

---
- summary: |
    Просмотр карусели фотографии товара 
  requirement: |
   Пользователь должен иметь возможность просматривать карусель фотографий товара 
  prerequisites: |
    Открыта страница магазина со списком товаров
  test-data: |
    Товар = iPhone X # выбрать любой товар на странице магазина 
  steps:
    - Находим товар iPhone X
    - Заходим на страницу товара iPhone X
    - Открываем фотографию товара для подробного просмотра фото не открывается # баг возможности просмотреть все фото товара нет
  expected-result: |
    Пользователь должен иметь возможность просматривать карусель фотографий для более подробного изучения товара 

---
- summary: |
    Кнопка "Возврата в список товаров"
  requirement: |
   Пользователь должен иметь возможность вернуться в список товаров 
  prerequisites: |
    Открыта страница магазина со списком товаров 
  test-data: |
    Товар = iPhone X # выбрать любой товар на странице магазина 
  steps:
    - Находим товар iPhone X
    - Заходим на страницу товара iPhone X
    - Визуально проверяем есть ли кнопка "Возврата в список товаров" на странице товара iPhone X
    - На странице товара iPhone X кнопка "Возврата в список товаров" отсутствует # баг нет возможности вернуться к списку товаров
  expected-result: |
    Пользователь должен иметь возможность вернуться в список товаров 

---
- summary: |
    Корзина добавление товара 
  requirement: |
    При нажатии кнопки "В корзину" товар добавиться в корзину пользователя
  prerequisites: |
    Открыта страница магазина со списком товаров
  test-data: |
    Товар = iPhone X # выбрать любой товар на странице магазина 
    Товар = iPhone 9
  steps:
    - Находим товар iPhone X
    - Нажимаем кнопку "В корзину"
    - Находим товар iPhone 9
    - Заходим на страницу товара iPhone 9
    - Нажимаем кнопку "В корзину"
    - Нажимаем кнопку "Корзина"
    - Визуально просматриваем страницу "Корзины" на наличие товаров iPhone X и iPhone 9
  expected-result: |
    В корзине пользователя отображены добавленные товары

---
- summary: |
    Корзина список товаров
  requirement: |
   В корзине отображается список добавленных в корзину товаров название количество цена без скидки цена со скидкой общая сумма покупок
  prerequisites: |
    Открыта страница "Корзина" со списком товаров 
  test-data: |
    Товар = iPhone X # выбрать любой товар на странице магазина 
  steps:
    - Визуально проверяем название товаров iPhone X
    - Проверяем количество товаров iPhone X
    - Проверяем цену без скидки iPhone X
    - Проверяем цену со скидкой iPhone X
    - Проверяем общую сумму добавленных товаров
  expected-result: |
    Пользователь имеет возможность просмотреть в корзине список и информацию о выбранном товаре название количество цена без скидки цена со скидкой общая сумма покупок 

- summary: |
    Корзина штучное удаление товара 
  requirement: |
    При нажатии кнопки "Удалить" удаляется соответствующий товар из списка
  prerequisites: |
    Открыта страница "Корзина" со списком товаров 
  test-data: |
    Товар = iPhone X # выбрать любой товар на странице магазина 
    Товар = iPhone 9
  steps:
    - Находим товар iPhone X
    - Нажимаем кнопку "Удалить"
    - Визуально просматриваем страницу "Корзины" со списком товаров
  expected-result: |
    Из корзины пользователя удален выбранный товар 

---
- summary: |
    Корзина кнопка "Очистить корзину"
  requirement: |
    При нажатии кнопки "Очистить корзину" удаляется весь товар из корзины пользователя
  prerequisites: |
    Открыта страница "Корзина" со списком товаров 
  test-data: |
    Товар = iPhone X # выбрать любой товар на странице магазина 
    Товар = iPhone 9
  steps:
    - Визуально просматриваем страницу "Корзины" со списком товаров
    - Нажимаем кнопку "Очистить корзину"
    - Визуально просматриваем страницу "Корзины" с очищенным списком
  expected-result: |
    Корзина пользователя очищена от товаров 

---
- summary: |
    Корзина кнопка "Продолжить покупки"
  requirement: |
    При нажатии кнопки "Продолжить покупки" пользователь возвращается в список товаров
  prerequisites: |
    Открыта страница "Корзина" со списком товаров 
  test-data: |
    Товар = iPhone X # выбрать любой товар на странице магазина 
    Товар = iPhone 9
  steps:
    - Визуально просматриваем страницу "Корзины" со списком товаров
    - Нажимаем кнопку "Продолжить покупки"
  expected-result: |
    Пользователь вернулся в список товаров магазина 

---
- summary: |
    Модальное окно добавления товаров количество 
  requirement: |
   Пользователь должен иметь возможность выбирать количество выбранного товара
  prerequisites: |
    Открыта страница магазина со списком товаров
  test-data: |
    Товар = iPhone X = 2штуки  # выбрать любой товар на странице магазина 
  steps:
    - Находим товар iPhone X
    - Нажимаем кнопку "В корзину"
    - Модальное окно с добавлением товара отсутствует # баг нет возможности выбрать количество товара перед добавлением его в корзину
    - iPhone X 1шт добавлен в корзину 
  expected-result: |
    Пользователь должен иметь возможность выбирать количество выбранного товара добавленного в корзину

---
- summary: |
    Кнопка "Оформить заказ"
  requirement: |
   Пользователь должен иметь возможность оформить заказ
  prerequisites: |
    Открыта страница "Корзина" со списком товаров 
  test-data: |
    Товар = iPhone X # выбрать любой товар на странице магазина 
    Товар = iPhone 9
  steps:
    - Визуально просматриваем список заказанных товаров количество цена сумма заказа 
    - Нажимаем кнопку "Оформить заказ"
    - Вышло модальное окно с успешным оформленным заказом
    - Визуально просматриваем список товаров количество цена сумма заказа
  expected-result: |
    Пользователь должен иметь возможность оформить заказ 

---
- summary: |
    Оформление заказа иконка "Закрыть"
  requirement: |
   Пользователь должен иметь возможность закрыть модальное окно заказа 
  prerequisites: |
    Открыто модальное окно успешно оформленного заказа 
  test-data: |
    Товар = iPhone X # выбрать любой товар на странице магазина 
    Товар = iPhone 9
  steps:
    - Визуально просматриваем список оформленных товаров количество цена сумма заказа
    - Нажимаем верхний правый угол иконка "Закрыть" # баг иконка "Закрыть" не активна
  expected-result: |
    Пользователь закрывает модальное окно заказа нажав на иконку "Закрыть" в верхнем правом углу 

---
- summary: |
    Оформление заказа кнопка "Закрыть"
  requirement: |
   Пользователь должен иметь возможность закрыть модальное окно заказа 
  prerequisites: |
    Открыто модальное окно успешно оформленного заказа 
  test-data: |
    Товар = iPhone X # выбрать любой товар на странице магазина 
    Товар = iPhone 9
  steps:
    - Визуально просматриваем список оформленных товаров количество цена сумма заказа
    - Нажимаем нижний правый угол кнопка "Закрыть" 
    - Модальное окно закрыто
  expected-result: |
    Пользователь закрывает модальное окно заказа нажав на кнопку "Закрыть" в нижнем правом углу

---
- summary: |
    Модальное окно подтверждения заказа 
  requirement: |
   Пользователь должен иметь возможность корректировать заказ в случае ошибки или подтвердить если заказ верен 
  prerequisites: |
    Открыта страница "Корзина" со списком товаров 
  test-data: |
    Товар = iPhone X # выбрать любой товар на странице магазина 
    Товар = iPhone 9
  steps:
    - Визуально просматриваем список заказанных товаров количество цена сумма заказа 
    - Нажимаем кнопку "Оформить заказ"
    - Вышло модальное окно с успешным оформленным заказом  # баг нет промежуточного модального окна с подтверждением заказа 
  expected-result: |
    Пользователь подтверждает заказ если он корректен 
    
